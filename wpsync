#!/bin/bash -u

# wpsync version 0.0.1

# installation: ln -s /path/to/wpsync /usr/local/bin/wpsync


#CWD=$(pwd)

if [ ! -f wpsync-config.sh ]
then
    echo "Config file does not exist"
    exit 1
else
    echo "Config file found. Sourcing variables"
    echo
fi


source wpsync-config.sh



for var in r_user r_host r_web_dir r_web_addr l_web_addr l_db_name l_db_pass l_db_user r_db_name r_db_user r_db_pass l_upload_dir r_upload_dir; do
    if [ -n "${!var}" ] ; then
        echo "$var is set to ${!var}"
    else
        echo "$var is not set"
    fi
done



r_search_and_replace="USE $r_db_name; UPDATE wp_options SET option_value=\"$r_web_addr\" WHERE option_name=\"siteurl\"; UPDATE wp_options SET option_value=\"$r_web_addr\" WHERE option_name=\"home\";"

l_search_and_replace="USE $l_db_name; UPDATE wp_options SET option_value=\"$l_web_addr\" WHERE option_name=\"siteurl\"; UPDATE wp_options SET option_value=\"$l_web_addr\" WHERE option_name=\"home\";"


testing () {
  # function for quickly testing things
  echo "test"
}


help (){
  echo "Available commands:"
  echo "–––––"
  echo "push_db"
  echo "push_files"
  echo "–––––"
  echo "pull_db"
  echo "pull_files"
  echo "–––––"

}


push_db () {
	echo "dump local db"

	mysqldump -u $l_db_user -p$l_db_pass $l_db_name > local-db.sql

	echo "uploading local db"

	scp local-db.sql $r_user@$r_host:$r_web_dir/

	echo "ready."

	echo "dumping remote db as backup && populate remote db with local db"

	ssh $r_user@$r_host "cd $r_web_dir \
	&& mysqldump -u $r_db_user -p$r_db_pass $r_db_name > remote-db.sql \
	&& mysql -u $r_db_user -p$r_db_pass $r_db_name < local-db.sql \
	&& mysql -u $r_db_user -p$r_db_pass $r_db_name -Bse '$r_search_and_replace'"

	echo "ready."

}

push_files () {

  echo "pushing files via rsync …"

	rsync -a $l_upload_dir $r_user@$r_host:$r_web_dir/$r_upload_dir

	echo "ready."


}


pull_files () {

  echo "pulling files via rsync …"

  rsync -a $r_user@$r_host:$r_web_dir/$r_upload_dir $l_upload_dir

  echo "ready."


}






pull_db(){

  echo "dump remote db"

  ssh $r_user@$r_host "cd $r_web_dir \
  && mysqldump -u $r_db_user -p$r_db_pass $r_db_name > remote-db.sql"


  echo "downloading local db"

  scp $r_user@$r_host:$r_web_dir/remote-db.sql remote-db.sql

  echo "ready."

  
  echo "populating local db with remote db and search replace"

  mysql -u $l_db_user -p$l_db_pass $l_db_name < remote-db.sql
  mysql -u $l_db_user -p$l_db_pass $l_db_name -Bse '$l_search_and_replace'
}







# ====================================
#  ACTUAL SCRIPT EXECUTION
# ====================================

echo 
echo "–––––––––––––"
echo "wpSync v0.0.1"
echo "–––––––––––––"
echo

# if an argument is passed (the number of arguments is not equal to zero), then check if that command is valid or not.
if [ $# -ne 0 ]
then
    # place all the command names in an array
    declare -a list_of_methods=(testing push_db push_files pull_db pull_files)

    # function to check if an item exists in an array
    contains_element () {
      local e
      for e in "${list_of_methods[@]}"
          do [[ "$e" == "${1:-help}" ]] && return 0
      done
      return 1
    }

    contains_element "$@"

    # if command is invalid, list the valid ones
    if [[ $? -eq 1 ]]
    then 
        echo Error: Command not found:
        echo

        help
    fi

fi

# script will execute whichever method is passed to it as an argument.
# The default is to run the `push` method.
${@:-help}


exit 